@charset "utf-8";

/* 웹폰트 CDN */
@import url("https://fonts.googleapis.com/css2?family=Black+Ops+One&family=Orbitron:wght@500&display=swap");

/* 
    font-family: 'Black Ops One', cursive;
    font-family: 'Orbitron', sans-serif;
*/

/* 로봇PJ CSS - robot.css */

/* 공사중 표시 */
/* body *{
    outline: 2px dashed lime;
} */

/* HTML */
html{
    scroll-behavior: smooth;
    /* 내부 아이디 요소 위치로 이동 시 스크롤 애니메이션을 부드럽게 처리하는 속성
    최상위 요소인 html에 세팅하면 전체페이지 스크롤에 적용됨 (JS사용없이 하는 방법)*/
}

/* 초기화 */
html, body, h1, h2, h3, ul, ol{
    margin: 0; padding: 0;
}

body{
    /* 배경 */
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
    
}

/* 공통 class */
.mt1{
    background: url(../images/metal01.jpg) no-repeat center/cover;
}

.mt2{
    background: url(../images/metal02.jpg) no-repeat center/cover;
}

/* 빛이나는 로봇 */
.bs, .bs::before{
    box-shadow: 0 0 10px 5px cyan;
}

/*********************************************** 1.상단영역 ***********************************************/

/*********************************************** 1-1 로고 ************************************************/

.logo{
    position: fixed;

    top: calc(50% - 100px);
    left: calc(50% - 100px);
    /* top left - 애니다상 1,2 */

    /* 
    [ 정중앙 배치방법1 ]
    top: calc(50% - 100px)
    left: calc(50% - 100px)
    -> calc 함수를 사용하여 중악 배치
    calc(계산식) -> 4칙연산가능
    - 주의: 덧셈, 뺄셈 기호 앞뒤 공백 필수!
    - 원리: 부모박스의 절반(50%) 이동 후
    중앙에 올 자신의 크기의 절반을 빼서 중앙으로 이동

    [ 정중앙 배치방법2 ] 
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); 
    원리:
    top, left를 부모박스의 절반(50%)만큼 밀고
    트랜스폼 트랜스레이트로 내크기의 절반만큼 왼쪽, 윗쪽으로 이동하면 정중앙이 된다. */

    /* 처음에 두배 크게 */
    transform: scale(2);
    /* 애니대상 3 */

    width: 200px;
    height: 200px;
    border-radius: 50%;
    /* 글자변경 */
    color: aquamarine;
    font-size: 45px;
    font-family: 'Orbitron', sans-serif;

    background: pink url(../images/robot_03.png) no-repeat center 10px /160px;
    text-align: center;
    line-height: 200px;
    text-shadow: 2px 2px 5px #000;
    border: 2px solid #ccc;
    /* 박스그림자 - 내부그림자 + 외부그림자(글로우효과) */
    box-shadow: inset 0 0 20px 5px #000,
    0 0 20px 5px pink;

    /* 애니메이션 : 이시이지반방마 */
    animation: logoAni 1.5s ease-in-out 2s forwards, 
    logoAni2 .8s ease-in-out 3.5s infinite alternate;

    /* animation: logoAni 1s ease-in-out 2s forwards; */

}

/* 로고 애니 키프레임 */
@keyframes logoAni {
    /* from{} - 최초값이 같으면 생략! */
    80%{
        /* 왼쪽위에 위치, 원래크기복원 */
        top: 50px;
        left: 50px;
        transform: scale(1);
        transform: scale(1) rotate(0deg);
    }
    100%{
        /* 왼쪽위에 위치, 원래크기복원 */
        top: 50px;
        left: 50px;
        transform: scale(1) rotate(20deg);
    }
}
/* 키프레임 */

/* 로고 흔들기 애니 키프레임 */
@keyframes logoAni2 {
    0%{
        transform: rotate(20deg);
    }
    100%{
        transform: rotate(-20deg);
    }
}


/******************************************************************************************* 
[ CSS로 애니메이션 하기 ]

- 시간에 따라 CSS설정이 변경되어 애니메이션 되도록 키프레임을 설정하고 이것을 호출함으로
의도된 연출을 구현하는 것이 CSS 애니메이션이다.

[ 애니메이션 키프레임 만들기 ]

- 키프레임이란? 애니메이션 장면을 넣는 코드

1. 두 장면 에니메이션

@keyframes 키프레임이름{
    from{시작CSS설정} 
    to{끝나는CSS설정} 
}

또는

@keyframes 키프레임이름{
    0%{시작CSS설정} 
    100%{끝나는CSS설정} 
}

-> 만약 from(0%) 설정이 초기설정과 같다면 
    from 설정은 생략할 수 있다.

2. 여러장면 키프레임

0%{CSS설정}
10%{CSS설정}
20%{CSS설정}
...
70%{CSS설정}
80%{CSS설정}
90%{CSS설정}
1000%{CSS설정}

(1) 장면에 대한 시간계산은 어떻게 하나
-> 전체시간 * 설정된 % /100

(2) 전체 애니메이션 시간은 언제 세팅하나
-> 호출시에 세팅

[ 설정된 키프레임 호출하는 방법 ]

animation: 이시이지반방마
(이름 시간 이징 지연 반복 방향 마지막상태)

1. 이름(animation-name) : 키프레임 이름

2. 시간(animation-duration) : 애니메이션 동작시간 -> 초단위 (s)

3. 이징(animation-timing-function) : easing 가속도

4. 지연시간(animation-delay) : 애니메이션 지연시간 (s)

5. 반복(animation-iteration-count) : 애니메이션 반복
    - 기본값 1, 숫자를 숫자만큼 반복함
    - 영원히 infinite(인피니트)    

6. 방향(animation-direction) : 시작 -> 끝
    - 두번이상 반복할 경우 반대경로로 애니메이션 설정
    -> alternate : 시작 -> 끝, 끝 -> 시작

7. 마지막상태(animation-fill-mode) : 
    -애니메이션이 끝났을떄 처음으로 돌아가는게 기본
    -forwards (앞쪽에... 즉, 애니끝 장면으로 마무리)
    -> 기본값 : backwards(뒤쪽으로, 즉 처음으로)
    -> 유의사항 : infinite(영원히) 일떄는 해당사항 없음


*******************************************************************************************/


/* 내용링크, 우리ㅗ가기 버튼, TV를 위한 투명도 애니용 클래스 만들기 */
.opa-ani{
    opacity: 0;
    /* 애니메이션 : 이시이지반방마 */
    animation: opaAni .2s linear 5s 5 alternate forwards;
}

/* 지연시간추가 */
.opa-ani2{
    animation-delay: 6s;
}
.opa-ani3{
    animation-delay: 7s;
}

/* 투명도 애니 키프레임 */
@keyframes opaAni {
    to{
        opacity: 1;
    }
}
/*********************************************** 1-2 내용링크 ********************************************/

.link{
    position: absolute;
    top: 100px;
    right: 50px;
    /* 투명도 -> 애니대상 */
    opacity: 0;
}

.link a{
    text-decoration: none;
    color: lawngreen;
    /* 글자: 스두크줄/체 */
    font: 50px 'Black Ops One';
    /* 글자그림자 */
    text-shadow: 2px 2px 2px #000;
}

.link a:hover{
    text-decoration: overline;
    color: orangered;
}

/*********************************************** 1-3 위로가기버튼 *****************************************/

.btntop{
    position: fixed;
    border-radius: 50%;
    width: 100px; height: 100px;
    bottom: 20px; right: 20px;
    background: #ccc;
    border: 5px outset #fff;
    /* 오버시 MDN으로 보더옵션 참조 
    W3C 참조
    https://www.w3schools.com/cssref/playdemo.asp?filename=playcss_border-style&preval=none
    */
    padding: 0;

    /* 투명도 -> 애니대상 */
    opacity: 0;
}

.btntop a{
    display: block;
    color: blue;
    font: 30px/95px 'Black Ops One';
    /* line-height가 95px인 이유:
    버튼요소는 box-sizing:border-box 이므로 내부에 패딩과 보더크기를 포함함
    따라서 보더크기인 5px를 빼야 컨텐츠 영역의 순수 높이가 된다 */
    text-decoration: none;
    width: 100%; height: 100%;
}

.btntop:hover{
    background: #ff0;
    border-style: inset;
}

.btntop a:hover{
    color: red;
}


/*********************************************** 2. 메인영역 **********************************************/

/*********************************************** 2-1 로봇박스 *********************************************/

.robx{
    padding-top: 200px;
    padding-bottom: 400px;
    height: 610px;
    /* 높이값은 컨텐츠 영역의 높이임(패딩 불포함)
    높이값을 준 이유는? 자식요소인 .head의 relative top값을 %로
    이동시킬 경우 부모 박스의 높이가 정해져야 하므로 줌
    */
}

/* 하위요소 이미지배경 공동설정 */
.robx>div>div{
    position: absolute;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

/*********************************************** 2-1-1 로봇머리 *******************************************/

.head{
    width: 250px; height: 250px;
    margin: 0 auto;
    border-radius: 50px 50px 0 0 ;
    position: relative;
    /* 위쪽방향으로 부모박스 높이값의 100%만큼 이동 */
    /* top은 애니메이션 변경대상 */
    top: -100%;
    /* 애니메이션 : 이시이지반방마 */
    animation: headAni 1s ease-out 4s forwards;
}

/* 헤드애니 키프레임 */
@keyframes headAni {
    to{
        top: 0;
    }
}/* 키프레임 */
/* 눈 공통 */
.eye{
    width: 50px; height: 50px;
    border-radius: 50%;
    background-color: #fff;
    border: 4px double #000;
}

/* 왼눈 */
.e1{
    background-image: url(../images/e1.jpg);
    top: 50px; left: 50px;
}


/* 오른눈 */
.e2{
    background-image: url(../images/e2.jpg);
    top: 50px; left: 150px;
}

/* 코 */
.nose{
    top: 106px;
    left: 98px;
    width: 50px;
    height: 53px;
    background-image: url(../images/nose.jpg);
    background-position-x: 0px !important;
    background-position-y: -3px !important;
    background-size: auto 106% !important;
    border-radius: 30px;
}

/* 입 */
.mouth{
    width: 83px; 
    height: 46px;
    bottom: 24px; 
    left: 82px;
    background: url(../images/mouth.png);

    /* 애니메이션 : 이시이지반방마 */
    animation: mouthAni .08s linear 7s infinite alternate;
}

/* 입애니 키프레임 */
@keyframes mouthAni {
    to{
        transform: scaleY(0.5);
    }
    from{
        transform: scaleY(1.5);
    }
}

/* 귀 공통 */
.ear{
    top: 80px;
    width: 60px;
    height: 90px;
}

/* 왼귀 */
.el{
    left: -60px;
    border-radius: 30px 0 0 30px;
}

/* 오른귀 */
.er{
    right: -60px;
    border-radius: 0 30px 30px 0;
}


/*********************************************** 2-1-2 로봇 몸통 ******************************************/

.body{
    width: 250px; height: 310px;
    margin: 0 auto;
    margin-top: 50px;
    position: relative;
    /* 왼쪽방향으로 부모박스 가로크기의 100%만큼 이동 
    -> 부모박스가 width:auto여도 %값이 적용된 이유는 
    기본 가로를 채우는 크기를 가지고 있기 때문*/
    /* left는 애니메이션 변경대상 */
    left: -100%;
    /* 애니메이션 : 이시이지반방마 */
    animation: bodyAni 1s ease-out 3s forwards;


}


/* 바디애니 키프레임 */
@keyframes bodyAni {
    to{
        left: 0;
    }
}/* 키프레임 */
/* 목 */
.neck{
    width: 60px; height: 50px;
    left: 95px;
    top: -50px;
}

/* 팔 공통 */
/* !important 없이 우선순위 높이는 방법은 부모를 써준다 */
.robx .arm{
    width: 50px;
    height: 250px;
    background-size: 100% ;
    background-repeat: repeat-y;
}

/* 가상요소로 손만들기 */
.arm::before{
    bottom: -45px;
    content: '';
    display: block;
    position: absolute;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    border: 1px solid #222;
    /* CSS3 그라데이션 */


    /*
    [ 그라데이션은 배경이미지에 있다 ]
    
    [선형 그라데이션]
    background-image: linear-gradient(45deg, silver 45%,rgb(114, 114, 114) 65%); 
                      linear-gradient(방향/각도, 색1 비율%, 색2 비율%....)
                      -방향값은 to top, to bottom, to left, to right
                      -각도는 숫자 deg
                      -> 방향 또는 각도를 사용, 안쓰면 to bottom이 기본값
                      -> 색상을 쓰고 뒤에 필요한 경우 비율을 사용
                      -> 색상 뒤 비율을 안쓰면 등분할됨

    [ 원형 그라데이션 ]
    background-image: radial-gradient(circle, silver 10%,rgb(114, 114, 114));
                      radial-gradient(옵션, 색1 비율%, 색2 비율%, ....)
                      - 옵션 : circle - 원형, 안쓰면 박스에 맞춤
                      - 세밀한 옵션 주기 (특정위치를 중심으로 빛반사효과)
                      >>>> 세부옵션 at 가로위치 세로위치
                      >>>> 세부옵션 종류 4가지 : 
                           1) closest-side / 2)farthest-side
                           3) closest-corner / 4)farthest-corner
                           예) radial-gradient(closest-corner at 30px 15px, blue, white)
                      -> 색상을 쓰고 뒤에 필요한 경우 비율을 사용
                      -> 색상 뒤 비율을 안쓰면 등분할됨
            -> 가로, 세로 위치는 px, % 단위 사용 가능



    */
    background-image: radial-gradient(farthest-corner at 20px 20px, white , #333);

}

/* 왼손 가상요소 */
.arm.a1::before{
    left: -4px;
}

/* 오른팔 가상요소 */
.arm.a2::before{
    left: -3px;
}

/* 가상요소로 손 그림자 만들기 */
.arm::after{
    content: '';
    display: block;
    position: absolute;
    width: 20px;
    height: 40px;
    background-color: #000;
    left: 10px;
    bottom: -45px;
    border-radius: 0 0 5px 5px;
    /* 클리핑 기법을 사용하여 그림자를 삼각형으로 만들어보기
    -> 다각형 클리핑
    clip-path: polygon(x1 y1, x2 y2, x3 y3,........)
    -> 소괄호 안은 비울 수 없다
    -> 각 죄표값은 px,%로 대상 내부영역임
    예컨데 삼각형 점을 세개 찍어준다
    */
    clip-path: polygon(0% 100%, 50% 0%, 100% 100%);
}

/* 왼손 그림자 가상요소 */
.arm.a1::after{
    left: 17px;
}


/* 오른손 그림자 가상요소 */
.arm.a2::after{
    left: 18px;
}



/* 왼팔 */
.a1{
    left: -60px;
}

/* 오른팔 */
.a2{
    right: -60px;
    /* 트랜스폼 회전기준 */
    transform: rotate(0deg);
    /* 회전축변경 : 가로중앙 세로 20px 위치 */
    transform-origin: center 20px;

    /* 애니메이션 : 이시이지반방마 */
    animation: 
    /* 애니1 팔들기 */
    a2Ani .6s ease-in-out 8s forwards,
    /* 애니2 팔 흔들기 */
    a2Ani2 .3s ease-in-out 8.6s infinite alternate;

}

/* 다리의 가상요소로 발 만들기 */
.leg::after{
    content: '';
    display: block;
    position: absolute;
    width: 70px;
    height: 30px;
    background-image: radial-gradient(farthest-corner at 20px 20px, white , #333);
    border-radius: 30px 30px 0 0 ;
    bottom: -20px;
    border-bottom: 20px solid #222;
}


/* 다리 공통 */
/* !important 없이 우선순위 높이는 방법은 부모를 써준다 */
.robx .leg{
    width: 70px;
    height: 350px;
    background-size: 100% ;
    background-repeat: repeat-y;
    top: 100%;
}

/* 오른팔 흔들기 키프레임 */
@keyframes a2Ani {
    to{
        transform: rotate(-158deg);
    }    
}/* 키프레임 */

/* 오른팔 흔들기 키프레임 */
@keyframes a2Ani2 {
    to{
        transform: rotate(-128deg);
    }    
}/* 키프레임 */

/* 왼다리 */
.l1{
    left: 0px;
}

/* 오른 다리 */
.l2{
    right: 0px;
}

/* 어꺠 공통 */
.robx .shd{
    top: -10px;
    width: 80px;
    height: 80px;
}

/* 왼어깨 */
.s1{
    left: -80px;
    border-radius: 50% 5px 5px 50%;
}

/* 오른어깨 */
.s2{
    right: -80px;
    border-radius: 5px 50% 50% 5px;
}

/* TV */
.tv{
    width: 220px;
    height: 165px;
    background-image: url(../images/tv.jpg);
    top: 70px;
    left: 13px;
    border-radius: 15px;
}

/* 스크린 */
.screen{
    position: absolute;
    top: 15px;
    left: 11px;
    width: 159px;
    height: 124px;
    background-color: black;
    border-radius: 5px;
    /* 넘치는 자식요소 숨기기 */
    overflow: hidden;
}

/* 아이프레임 */
.screen iframe{
    position: absolute;
    left: -56px;
    top: -15px;
    width: 175%;
    height: 130%;
    border: none;
    border-radius: 10px;

}
/*********************************************** 2-2 로봇 설명박스 ****************************************/
.dcbx{
    max-width: 800px;
    margin: 0 auto;
    color: #fff;
    background: rgba(0, 0, 0, 0.541);
    margin-bottom: 200px;
    padding: 15px 30px;
    border: 3px solid #fff;
    text-shadow: 1px 1px 1px #000;
    box-shadow: inset 0 0 20px blue, inset 0 0 50px 10px cyan;
}

/* 로봇설명 제목 */
.dcbx h2{
    /* sticky 예정 */
    text-align: center;
    font-size: 35px;
    color: lime;
    background-color: rgba(255, 255, 255, 0.45);
    border-radius: 20px;
}

/* 2-2-2 로봇정보 출처 */
.dcbx small{
    display: block;
    text-align: center;
    font-size: 12px;
    color: yellow;
    padding: 10px;
}

/* 2-2-3 설명문단 */
.dcbx p{
    font-size: 15px;
    line-height: 1.8;
    /* 자간 */
    letter-spacing: 1px;
    /* 단어사이 */
    word-spacing: 2px;
    
    /* 가독성을 위한 다단설정 */
    /* 다단표시(다중열 속성) */
    /* 다중역 개수설정 */
    column-count: 3;
    
    /* 다중열 구분선 */
    column-rule: 2px dashed lime;
    /* 다중열 사이 간격 */
    column-gap: 50px;

    /* 양쪽정렬 */
    text-align: justify;
    /* 단어꺠기 */
    /* break-all 모든단어 깨기 */
    word-break: break-all;

}

/* 설명문단 첫글자 가상요소 */
.dcbx p::first-letter{
    font-size: 2rem;
    color: aqua;
    font-weight: bold;
}

/*********************************************** 3.하단영역 ***********************************************/

.info{
    padding: 50px;
    text-align: center;
    color: #fff;
    background: rgba(0, 0, 0, 0.63);
    font: 30px 'Black Ops One';
}

/* 가상요소로 아이콘 넣기 */
.info span::before{
    content: '';
    display: inline-block;
    width: 30px; height: 30px;
    /* outline: 1px solid lime; */
    vertical-align: -5px;
    margin-right: 10px;
    /* 배경 세부설정은 한번에 설정하는 코드 아래에 있어야 덮어쓴다 */
    background: url(../images/robot_03.png) no-repeat;
    background-size: 60px;
    background-position: -12px -4px;
    border-radius: 50%;
    border: 2px solid #ccc;

}


/*********************************************** 미디어쿼리 ***********************************************/
@media screen and (max-width:770px) {
    .dcbx p {
        column-count: 2;
    }
}
@media screen and (max-width:550px) {
    .dcbx p {
        column-count: 1;
    }
}

